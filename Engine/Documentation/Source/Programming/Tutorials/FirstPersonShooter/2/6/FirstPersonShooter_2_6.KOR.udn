INTSourceChangelist:2672917
Availability: Docs
Title: 2.6 - 캐릭터에 메시 추가
Crumbs: %ROOT%, Programming, Programming/Tutorials/FirstPersonShooter, Programming/Tutorials/FirstPersonShooter/2
Description: 일인칭 슈팅 캐릭터에 메시를 추가하는 법을 배워봅니다.
SkillLevel: Beginner
Version: 4.9

[VAR:Steps]
[OBJECT:Navigation]
	[PARAM:previous]
		[예전 단계](Programming/Tutorials/FirstPersonShooter/2/5)
	[/PARAM]
	[PARAM:current]
	[/PARAM]
	[PARAM:home]
		[섹션 홈](Programming/Tutorials/FirstPersonShooter/2)
	[/PARAM]
	[PARAM:next]
		[다음 단계](Programming/Tutorials/FirstPersonShooter/2/7)
	[/PARAM]
[/OBJECT]
[/VAR]

%Steps%

이번 단계에서는 스켈레탈 메시에 캐릭터를 설정합니다. `Character` 클래스는 기본적으로 우리가 쓸 `SkeletalMeshComponent` 를 생성해 주므로, 어떤 스켈레탈 메시 애셋을 사용할지 알려주기만 하면 됩니다.

[REGION:note]
시작에 앞서, 다음 링크에서 샘플 메시를 다운로드한 뒤 풀어주세요:
*	[샘플 메시](GenericMale.zip "샘플 메시")
[/REGION]

## 스켈레탈 메시 임포트

1.	콘텐츠 브라우저의 파일창 안에 **우클릭** 하여 **애셋 임포트** 대화창을 엽니다.

1.	**/Game... 에 임포트** 를 클릭하여 **임포트** 대화창을 엽니다.

	![](RightClickImport.png)

1.	**GenericMale.fbx** 메시 파일을 찾아 선택합니다.

1.	**열기** 를 **클릭** 하여 메시를 프로젝트에 임포트 시작합니다.

1.	**콘텐츠 브라우저** 에서 **FBX 임포트 옵션** 대화창이 뜹니다. **임포트** 를 **클릭** 하면 프로젝트에 메시가 추가됩니다.

1.	**저장** 버튼을 **클릭** 하여 임포트된 메시를 저장합니다.

## FPS 캐릭터에 대한 블루프린트 생성

1.	**콘텐츠 브라우저** 에 **우클릭** 한 다음 **새 폴더** 를 선택합니다.

1.	이 폴더 이름을 Blueprints 라 합니다.

1.	폴더에 **더블클릭** 하여 엽니다.

1.	**신규 추가** 버튼을 **클릭** 하고 **블루프린트 클래스** 를 선택합니다.

	![](AddNewBPClass.png)

1.	**모든 클래스** 드롭다운 메뉴를 선택하고 검색창에 FPSCharacter 라 입력합니다.

	![](AddFPSCharacterClass.png)

1.	**FPSCharacter** 에 **클릭** 하고 **선택** 버튼을 누릅니다.

1.	새로운 블루프린트 이름을 BP_FPSCharacter 라 합니다.

	![](NameBP_FPSCharacter.png)

## 삼인칭 메시 구성

1.	 **BP_FPSCharacter** 아이콘을 **더블클릭** 하여 **블루프린트 에디터** 에서 엽니다.

1.	**컴포넌트** 탭에서 **Mesh** 컴포넌트에 **클릭** 합니다.

	![](MeshComponent.png)

1.	**디테일** 탭의 **메시** 섹션으로 스크롤해 내려가 **없음** 이라 되어있는 드롭다운 메뉴에 **클릭** 합니다.

1.	**GenericMale** 스켈레탈 메시를 선택합니다.

	![](SelectSkeletalMesh.png)

1.	**디테일** 탭에서 Z **위치** 를 -88 로 설정하여 `SkeletalMeshComponent` 를 `CapsuleComponent` 에 정렬시킵니다.

	![](NewZLoc_Mesh.png)

	[REGION:note]
	**디테일** 탭에 값을 설정하는 대신 **프리뷰 뷰포트** 에서 위젯으로 컴포넌트를 이동시킬 수도 있습니다.
	[/REGION]

1.	`SkeletalMeshComponent` 는 이제 다음과 비슷할 것입니다:

	![](SkeletalMeshLocation.png)

	[REGION:note]
	일반적으로, `CapsuleComponent` 안에 `SkeletalMeshComponent` 가 포함되도록, `ArrowComponent` 가 가리키는 것과 같은 방향을 바라보도록 해야 캐릭터가 월드를 제대로 돌아다닙니다.
	[/REGION]

1.	 **블루프린트 에디터** 를 닫기 전 **BP_FPSCharacter** 블루프린트를 **컴파일** 및 **저장** 합니다.

## 디폴트 폰 클래스 설정

1.	Visual Studio 로 돌아가 `FPSGameMode.cpp` 를 엽니다.

1.	`FPSGameMode.cpp` 에서 `FPSGameMode` 생성자를 찾아 기존 `DefaultPawnClass` 할당 위치를 찾습니다:

		DefaultPawnClass = AFPSCharacter::StaticClass();

1.	`DefaultPawnClass` 할당을 다음 코드로 대체합니다:

		// 기본 폰 클래스를 블루프린트화된 캐릭터로 설정합니다.
		static ConstructorHelpers::FClassFinder<APawn> PlayerPawnObject(TEXT("Pawn'/Game/Blueprints/BP_FPSCharacter.BP_FPSCharacter_C'"));
		if (PlayerPawnObject.Class != NULL)
		{
			DefaultPawnClass = PlayerPawnObject.Class;
		}

	[REGION:note]
	이 코드는 블루프린트로 생성된 클래스를 찾아 기본 폰 클래스로 할당합니다. 참고로 애셋 경로의 "_C" 접미사는 게임에 사용되는 실제 클래스와 블루프린트 애셋을 구분해 줍니다. 블루프린트를 애셋 트리 내 다른 폴더에 넣으면, 콘텐츠 브라우저에서 애셋에 우클릭한 다음 '레퍼런스 복사' 를 선택하는 것으로 전체 경로를 구할 수 있습니다.
	![](CopyAssetReference.png)
	[/REGION]

1.	이 시점에서, `FPSGameMode.cpp` 상단의 `#include "FPSCharacter.h"` 를 제거해도 됩니다. `FPSGameMode.cpp` 는 이제 다음과 같아 보일 것입니다:

		// 프로젝트 세팅의 설명 페이지에 저작권 문구를 채우세요.
		
		#include "FPSProject.h"
		#include "FPSGameMode.h"
		
		AFPSGameMode::AFPSGameMode(const FObjectInitializer& ObjectInitializer) : Super(ObjectInitializer)
		{
			// 기본 폰 클래스를 블루프린트화된 캐릭터로 설정합니다.
			static ConstructorHelpers::FClassFinder<APawn> PlayerPawnObject(TEXT("Pawn'/Game/Blueprints/BP_FPSCharacter.BP_FPSCharacter_C'"));
			if (PlayerPawnObject.Class != NULL)
			{
				DefaultPawnClass = PlayerPawnObject.Class;
			}
		}//AFPSGameMode 생성자
		
		void AFPSGameMode::StartPlay()
		{
			Super::StartPlay();
		
			StartMatch();
		
			if (GEngine != nullptr)
			{
				GEngine->AddOnScreenDebugMessage(-1, 5.f, FColor::Yellow, TEXT("We are using FPSGameMode."));
			}
		}//StartPlay()

## PIE 모드에서 새 메시 확인

에디터 내에서 새로 추가한 메시를 컴파일하고 테스트할 차례입니다.

1.	Visual Studio 에서 `FPCSGameMode.cpp` 를 저장합니다.

1.	**Solution Explorer** 에서 **FPSProject** 를 찾습니다.

1.	**FPSProject** 에 **우클릭** 하고 **Build** 를 선택하여 프로젝트를 컴파일합니다.

	![](BuildProject.png)

1.	빌드 완료 후 언리얼 에디터에서 **FPSProject** 를 엽니다.

1.	레벨 에디터 툴바의 **플레이** 버튼을 **클릭** 합니다. 이동하면서 캐릭터의 그림자를 확인할 수 있을 것입니다.

	[REGION:note]
	캐릭터의 메시 확인을 위해 카메라를 자유롭게 움직이려면, F1 키를 눌러 마우스 커서 제어권을 다시 획득한 다음, 툴바의 **탈출** 버튼을 **클릭** 하면 됩니다.
	![](FreelyMovingCamera.png)
	[/REGION]

1.	레벨 에디터의 **중지** 버튼을 **클릭** 하여 에디터에서 플레이 (PIE) 모드를 빠져나갑니다.

%Steps%