INTSourceChangelist:2672916
Availability:Docs
Title:3.5 - ビューポートにクロスヘアを追加する
Crumbs: %ROOT%, Programming, Programming/Tutorials/FirstPersonShooter, Programming/Tutorials/FirstPersonShooter/3
Description:First Person Shooter プロジェクトで、ビューポートにクロスヘアを追加する方法を学びます。
SkillLevel:初心者向け
Version:4.9

[VAR:Steps]
[OBJECT:Navigation]
	[PARAM:previous]
		[前のステップ](Programming/Tutorials/FirstPersonShooter/3/4)
	[/PARAM]
	[PARAM:current]
	[/PARAM]
	[PARAM:home]
		[セクション ホーム](Programming/Tutorials/FirstPersonShooter/3)
	[/PARAM]
	[PARAM:next]
		[次のセクション](Programming/Tutorials/FirstPersonShooter/4 "")
	[/PARAM]
[/OBJECT]
[/VAR]

%Steps%

[REGION:note]
作業を開始する前に、次のリンクからサンプル画像をダウンロードし、抽出してください。
*	[Sample Crosshair Image](Crosshair_fps_tutorial.zip "Sample Crosshair Image")
[/REGION]

このステップでは、照準 (クロスヘア) HUD エレメントをゲームに追加し、発射物の照準を合わすことができるようにします。

## クロスヘア アセットをインポートする

1.	コンテンツ ブラウザのファイル ボックス内で **右クリック** して **インポート アセット** ダイアログボックスを開きます。

1.	**'Import to /Game...' をクリック** して **[Import]** ダイアログボックスを開きます。

	![](RightClickImport.png)

1.	**crosshair.TGA** 画像ファイルを探して選択します。

1.	**[Open]** をクリックして画像ファイルのプロジェクトへのインポートを開始します。

1.	**[Save]** ボタンを **クリック** してインポートしたメッシュを保存します。

## 新規 HUD クラスを追加する

1.	ファイル メニューで **[New C++ Class... (新規 C++ クラス)]** を選択して、新しい Parent (親) クラスを選択します。

1.	**[Choose Parent Class (親クラスを選択)]** メニューが開きます。下方にスクロールして、親クラスとして **[HUD]** を選択して、**[Next] をクリック** します。

	![](ChooseHUDClass.png)

1.	新しいクラスに 「FPSHUD」 と名前を付けて、 **[Create]** をクリックします。

	![](NameHUDClass.png)

1.	**[Solution Explorer]** で、`FPSHUD` クラス インターフェースを探して、 `FPSHUD.h` を開きます。

1.	 `FPSHUD.h` で `GENERATED_BODY()`の下に以下のコンストラクタ宣言を配置します。

		AFPSHUD(const FObjectInitializer& ObjectInitializer);

1.	**[Solution Explorer]** で、`FPSHUD` クラスを探して、 `FPSHUD.cpp` を開きます。

1.	`FPSHUD.h` で `GENERATED_BODY()` の下に以下のコンストラクタ宣言を記述します。

		AFPSHUD::AFPSHUD(const FObjectInitializer& ObjectInitializer) :Super(ObjectInitializer)
		{

		}

1.	`FPSHUD.h` に戻り、以下のプライベート変数を追加します。

		private:

		// Crosshair アセット ポインタ

			UTexture2D* CrosshairTex;

1.	`FPSHUD.cpp` にあるコンストラクタ内に以下のコードを追加します。:

		// クロスヘア テクスチャの設定
		static ConstructorHelpers::FObjectFinder<UTexture2D> CrosshairTexObj(TEXT("Texture2D'/Game/crosshair.crosshair'"));
		if (CrosshairTexObj.Object != NULL)

		{
			CrosshairTex = CrosshairTexObj.Object;
		}

	[REGION:note]
	エディタにあるテクスチャへのアセットパスは、 [コンテンツ ブラウザ] でアセットを右クリックして、[Copy Reference] を選択すると取得できることを覚えておいてください。
	![](CopyReference.png)
	[/REGION]

1.	`FPSHUD.h` に戻り、`GENERATED_BODY()` の下に以下の関数宣言を追加します。

		// HUD の最初のドロー コール
		virtual void DrawHUD() override;

1.	`FPSHUD.cpp` で、以下の関数定義で `DrawHUD` オーバーライドを実装します。

		void AFPSHUD::DrawHUD()
		{
			Super::DrawHUD();
			// シンプルなクロスヘアを描画
			// キャンバスの中心を見つけます。
			const FVector2D Center(Canvas->ClipX * 0.5f, Canvas->ClipY * 0.5f);
			// テクスチャの中央をキャンバスの中央と一致させるために半分のテクスチャのディメンションでオフセット
			const FVector2D CrossHairDrawPosition((Center.X - (CrosshairTex->GetSurfaceWidth() * 0.5f)), (Center.Y - (CrosshairTex->GetSurfaceHeight() * 0.5f)));
			// クロスヘアを描画
			FCanvasTileItem TileItem(CrossHairDrawPosition, CrosshairTex->Resource, FLinearColor::White);
			TileItem.BlendMode = SE_BLEND_Translucent;
			Canvas->DrawItem(TileItem);
		}

1.	`FPSHUD.h` は以下のようになります。

		// Project Settings の Description ページに著作権情報を入力してください。
		#pragma once

		#include "GameFramework/HUD.h"

		#include "FPSHUD.generated.h"
		/**

		 * 
		 */
		UCLASS()
		class FPSPROJECT_API AFPSHUD : public AHUD
		{
			GENERATED_BODY()
		AFPSHUD(const FObjectInitializer& ObjectInitializer);

		// HUD の最初のドロー コール

			virtual void DrawHUD() override;
		private:

		// Crosshair アセット ポインタ

			UTexture2D* CrosshairTex;
			};

1.	`FPSHUD.cpp` は以下のようになります。

		// Project Settings の Description ページに著作権情報を入力してください。

		#include "FPSProject.h"
		#include "FPSHUD.h"

		AFPSHUD::AFPSHUD(const FObjectInitializer& ObjectInitializer) :Super(ObjectInitializer)
		{
			// クロスヘア テクスチャの設定
			static ConstructorHelpers::FObjectFinder<UTexture2D> CrosshairTexObj(TEXT("Texture2D'/Game/crosshair.crosshair'"));

			if (CrosshairTexObj.Object != NULL)
			{
				CrosshairTex = CrosshairTexObj.Object;
			}
		}

		void AFPSHUD::DrawHUD()
		{
			Super::DrawHUD();
			// シンプルなクロスヘアを描画
			// キャンバスの中心を見つけます。
			const FVector2D Center(Canvas->ClipX * 0.5f, Canvas->ClipY * 0.5f);
			// テクスチャの中央をキャンバスの中央と一致させるために半分のテクスチャのディメンションでオフセット
			const FVector2D CrossHairDrawPosition((Center.X - (CrosshairTex->GetSurfaceWidth() * 0.5f)), (Center.Y - (CrosshairTex->GetSurfaceHeight() * 0.5f)));
			// クロスヘアを描画
			FCanvasTileItem TileItem(CrossHairDrawPosition, CrosshairTex->Resource, FLinearColor::White);
			TileItem.BlendMode = SE_BLEND_Translucent;
			Canvas->DrawItem(TileItem);
		}

1.	`FPSHUD.h` と `FPSHUD.cpp` を Visual Studio に保存します。

1.	**[Solution Explorer (ソリューション エクスプローラ)]** で **[FPSProject]** を探します。

1.	**[FPSProject]** 上で **右クリック** して、**[Build (ビルド)]** を選択してプロジェクトをコンパイルします。

	![](BuildFPSProject.png)

## GameMode を更新して新規 HUD クラスを使用する

1.	`FPSGameMode.cpp`の上に、以下の include 文を追加します。

		#include "FPSHUD.h"

1.	 `FPSGameMode.cpp` 内にある `FPSGameMode` コンストラクタで以下のコードの行を追加します。

		HUDClass = AFPSHUD::StaticClass();

1.	`FPSGameMode.cpp` は以下のようになります。

		// Project Settings の Description ページに著作権情報を入力してください。
		#include "FPSProject.h"

		#include "FPSGameMode.h"
		#include "FPSHUD.h"
		AFPSGameMode::AFPSGameMode(const FObjectInitializer& ObjectInitializer) :Super(ObjectInitializer)

		{
			// ブループリントで作成したキャラクターにデフォルトのポーンクラスを設定
			static ConstructorHelpers::FClassFinder<APawn> PlayerPawnObject(TEXT("Pawn'/Game/Blueprints/BP_FPSCharacter.BP_FPSCharacter_C'"));
			if (PlayerPawnObject.Class != NULL)
			{
				DefaultPawnClass = PlayerPawnObject.Class;
			}
			HUDClass = AFPSHUD::StaticClass();
		}//AFPSGameMode Constructor
		void AFPSGameMode::StartPlay()

		{
			Super::StartPlay();
		StartMatch();

		if (GEngine != nullptr)

			{
				GEngine->AddOnScreenDebugMessage(-1, 5.f, FColor::Yellow, TEXT("We are using FPSGameMode."));
			}
		}//StartPlay()

1.	`FPSGameMode.cpp` を Visual Studio に保存します。

1.	**[Solution Explorer (ソリューション エクスプローラ)]** で **[FPSProject]** を探します。

1.	**[FPSProject]** 上で **右クリック** して、**[Build (ビルド)]** を選択してプロジェクトをコンパイルします。

	![](BuildFPSProject.png)

1.	ビルドが終了したらアンリアル エディタでご自身の **FPSProject** を開きます。

1.	レベル エディタのツールバーで、**[Play (再生)]** ボタンを **クリック** します。新規作成したクロスヘアで発射物の照準を合わせることができるようになります。

	![](CrosshairsInGame.png)

1.	[PIE (Play In Editor)] モードを終了するには、レベル エディタで **[Stop]** ボタンを **クリック** します。

これで終わりです！以下について学習しました。

&#x2713; ゲームに発射物を追加  
&#x2713; シューティングの実装  
&#x2713; プロジェクタイルのコリジョンとライフタイムのセットアップ  
&#x2713; 発射物がワールドと相互作用するようにする  
&#x2713; ビューポートにクロスヘア (照準) を追加  

これで次のセクションでキャラクターのアニメートについて学ぶ準備が整いました。

%Steps%