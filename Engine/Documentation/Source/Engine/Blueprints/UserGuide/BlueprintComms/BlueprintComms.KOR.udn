INTSourceChangelist:2686672
Availability:Public
Title:블루프린트 직접 통신
Crumbs: %ROOT%, Engine, Engine/Blueprints, Engine/Blueprints/UserGuide
Description:다른 블루프린트에서 한 블루프린트의 함수, 이벤트, 변수를 사용하는 법입니다.
related:Engine/Blueprints/UserGuide/BlueprintCommsUsage
related:Engine/Blueprints/UserGuide/Types/Interface/UsingInterfaces
related:Engine/Blueprints/UserGuide/EventDispatcher
version: 4.9


[VAR:Topic]
[OBJECT:Topic]
	[PARAM:image]
		![%Engine/Blueprints/UserGuide/BlueprintComms:title%](Engine/Blueprints/UserGuide/direct_comm_topic.png)
	[/PARAM]
	[PARAM:icon]
	[/PARAM]
	[PARAM:title]
		%Engine/Blueprints/UserGuide/BlueprintComms:title%
	[/PARAM]
	[PARAM:description]
		%Engine/Blueprints/UserGuide/BlueprintComms:description%
	[/PARAM]
	[PARAM:path]
		[RELATIVE:Engine/Blueprints/UserGuide/BlueprintComms]
	[/PARAM]
[/OBJECT]
[/VAR]

[VAR:TopicCompact]
[OBJECT:TopicCompact]
	[PARAM:image]
		![%Engine/Blueprints/UserGuide/BlueprintComms:title%](Engine/Blueprints/UserGuide/direct_comm_topic.png)
	[/PARAM]
	[PARAM:icon]
	[/PARAM]
	[PARAM:title]
		%Engine/Blueprints/UserGuide/BlueprintComms:title%
	[/PARAM]
	[PARAM:description]
		%Engine/Blueprints/UserGuide/BlueprintComms:description%
	[/PARAM]
	[PARAM:path]
		[RELATIVE:Engine/Blueprints/UserGuide/BlueprintComms]
	[/PARAM]
[/OBJECT]
[/VAR]



[TOC(start:2)]

블루프린트 작업을 할 때, 가끔은 다른 블루프린트에 있는 함수, 이벤트, 변수에 접근하고 싶을 때가 있습니다. 가장 간단한 방법은 공개적으로 노출된 오브젝트 변수를 통해 "타겟" 블루프린트를 레퍼런싱한 다음, 사용하고자 하는 블루프린트 인스턴스를 지정하는 것입니다.

## 타겟 블루프린트를 레퍼런싱하는 간단한 방법

다음 섹션은 작업중인 블루프린트에서 타겟 블루프린트를 레퍼런싱하는 가장 간단하고 흔한 방법에 대한 예제입니다.

### 타겟 블루프린트에 대한 오브젝트 변수 만들기

타겟 블루프린트를 레퍼런싱하는 오브젝트 변수를 만들면 그 함수, 이벤트, 변수에 접근할 수 있습니다.

**타겟 블루프린트를 레퍼런싱하는 오브젝트 변수를 만들려면**:

1. 블루프린트 에디터에서 작업중인 블루프린트를 엽니다.

1. **내 블루프린트** 패널에서 **Variables** (변수) 카테고리에 있는 ![](Engine/Blueprints/Editor/UIComponents/MyBlueprint/plus_Button.png) 버튼을 클릭하여 새 변수를 만듭니다: ![](Engine/Blueprints/Editor/UIComponents/MyBlueprint/myblueprint_variable.png)

1. 새 변수의 이름을 타겟 블루프린트에 연관시켜 "TargetBlueprint" 식으로 짓습니다.

1. **디테일** 패널에서 **Variable Type** (변수 유형)옆의 드롭다운 박스를 클릭합니다. **Object Types** (오브젝트 유형) 섹션을 펼칩니다.

	[REGION:raw]
	![Variable Type](BP_VarType.png)
	[/REGION]

1. 리스트에서 레퍼런싱하고자 하는 블루프린트 이름을 선택한 뒤 **레퍼런스** 옵션을 선택합니다.

	![Blueprint Reference](BP_Blueprint2Ref.png)

1. 모범적인 방법으로는, 새 오브젝트 변수의 **툴팁** 박스에 "대화하고자 하는 블루프린트로의 레퍼런스" 와 같이 툴팁을 입력합니다.

	[REGION:raw]
	![Tooltip](BP_Tooltip.png)
	[/REGION]

1. **내 블루프린트** 패널에서 새 오브젝트 변수 옆의 '감은 눈' 모양 아이콘을 클릭하여 '뜬 눈' 모양으로 변경시킵니다. 그러면 그 변수는 퍼블릭 설정되어 노출되며, 레벨 에디터의 **디테일** 패널에서 값을 설정하는 것이 가능합니다.

	[REGION:raw]
	![Closed Eye](BP_ClosedEye_panel.png)(convert:false)
	[/REGION]

	'뜬 눈' 아이콘 주변의 녹색은 노출된 변수에 툴팁이 있음을 나타냅니다. 노출된 변수에 툴팁이 없는 경우, 눈 주변이 노란 색으로 나타납니다.

1. 블루프린트를 컴파일하고 저장합니다.

[REGION:note]
어느 변수, 함수, 이벤트를 노출시킬지에 대해서는 유의하시기 바랍니다. 다른 사람이 접근해서 변경했을 경우 안전하지 않은 변수는 노출시키지 마세요. 모든 것을 노출하기 보다는 다른 블루프린트에서 필요하거나 레벨 디자이너가 변경할 수 있도록 하고픈 부분만 노출하는 것이 모범 사례라 하겠습니다.
[/REGION]

### 블루프린트 인스턴스 지정하기

블루프린트 클래스는 여러개의 인스턴스를 찍어낼 수 있는 일종의 템플릿 또는 아키타입으로 사용할 수 있습니다. 이때문에 타겟 블루프린트를 레퍼런싱할 때, 사용하고자 하는 타겟 블루프린트 인스턴스를 지정할 수 있습니다.

**사용하고자 하는 타겟 블루프린트 인스턴스를 지정하려면**:

1. 레벨 에디터의 **디테일** 패널에서, 작업중인 블루프린트를 선택해 둔 상태로, 방금 만든 퍼블릭 노출 변수가 들어있는 부분을 찾습니다. 변수 생성시 다른 섹션을 지정하지 않았다면, **디폴트** 섹션에서 찾을 수 있습니다. (참고로 타겟 블루프린트의 인스턴스를 미리 배치해 둬야 **디테일** 패널에서 인스턴스를 선택할 수 있습니다.)

1. 타겟 블루프린트를 레퍼런싱하는 오브젝트 변수 이름 옆의 드롭다운 박스에서 사용하고자 하는 블루프린트 인스턴스를 선택합니다.

	![Details Panel](BP_DetailsRef.png)

[REGION:note]
작업중인 블루프린트가 레벨 블루프린트인 경우, 사용하고자 하는 블루프린트 인스턴스의 지정은 레벨 에디터가 아니라 블루프린트 에디터에서 합니다. 기본적으로 블루프린트 에디터에서 **디테일** 패널의 위치는 좌하단 구석입니다.
[/REGION]

[REGION:tip]
사용하고자 하는 인스턴스가 리스트 어디에 있는지 확실치 않은 경우, 월드 아웃라이너나 뷰포트에서 그 인스턴스를 선택한 다음 드롭다운 메뉴에서 **선택 사용** 을 클릭합니다.
[/REGION]

### 타겟 블루프린트에서 함수, 이벤트, 변수 사용하기

타겟 블루프린트에 대한 오브젝트 변수를 생성한 이후에는, Ctrl 키를 누른 채 그래프에 끌어 놓으면 변수 "Getter" 노드가 생성되어 레퍼런스를 만들 수 있습니다. 노드의 출력 핀에서 끌어 놓으면 맥락 메뉴가 떠, 그 타겟 블루프린트에서 사용할 수 있는 이벤트, 함수, 변수 목록이 나타납니다. 그러면 그 요소를 다른 스크립트 요소처럼 사용할 수 있는 것입니다.

![Context Menu](BP_Target_ContextMenu.png)

## 타겟 블루프린트를 레퍼런싱하는 다른 방법

작업중인 블루프린트에서 타겟 블루프린트를 레퍼런싱하는 방법 중 좀 더 복잡한 것은 다음과 같습니다:
* 타겟 블루프린트 유형으로 형 변환(cast).
* 타겟 블루프린트 유형을 함수의 파라미터로 지정.

### 블루프린트 유형으로 형 변환

다른 액터에 대해 형 변환하듯 블루프린트 유형으로 형 변환할 수 있습니다.

**블루프린트 유형으로 형 변환하려면:**

1. 이벤트 그래프에서, 맥락 메뉴에 형 변환(Cast) 노드가 포함된 노드의 출력 핀을 끌어 놓습니다. 액터에 대한 오브젝트 변수가 그렇습니다. 뜨는 맥락 메뉴에서 "cast" 라 입력 시작합니다. "Casting" 아래 리스트에서 타겟 블루프린트 유형을 찾아 선택합니다.

	![Casting to a Blueprint](BP_FindCastType.png)

	![Casting Node](BP_Cast_CastNode.png)

1. 타겟 블루프린트 유형이 나열되는 출력 핀을 끌어 놓아 맥락 메뉴를 띄우면, 타겟 블루프린트의 함수, 이벤트, 변수가 포함되어 있습니다.

	![Casting Context Menu](BP_Cast_ContextMenu.png)
	
	형 변환에 성공하면 그 타겟 블루프린트 유형의 함수, 이벤트, 변수를 사용할 수 있습니다. 이 맥락 메뉴에서 추가하는 노드는 Casting 노드의 "Success" 출력 실행 핀에 자동으로 링크됩니다.

	![Casting Nodes](BP_Casting.png)

<!-----For more information about casting, see (link).---->

### 블루프린트 유형을 함수 파라미터로 지정하기

블루프린트에서 함수 작업을 할 때, 해당 함수의 파라미터로 타겟 블루프린트 유형을 지정할 수 있습니다.

**함수 파라미터로 블루프린트 유형을 지정하는 함수를 만들려면**:

1. **내 블루프린트** 패널에서 **Functions** (함수) 카테고리에 있는 ![](Engine/Blueprints/Editor/UIComponents/MyBlueprint/plus_Button.png) 버튼을 클릭하여 새 변수를 만듭니다: ![](Engine/Blueprints/Editor/UIComponents/MyBlueprint/myblueprint_function.png)

1. **디테일** 패널에서 **새** 버튼을 눌러 **입력** 을 추가합니다.

	![New Function Input](BP_Function_Input.png)

1. **NewParam** 옆의 드롭다운 박스에서, **오브젝트** 섹션을 펼치고 타겟 블루프린트 유형을 찾아 선택합니다.

	![Setting a Function Parameter](BP_Function_ObjectVariable.png)

1. 이벤트 그래프에서, 새 파라미터의 출력 핀을 끌어 놓습니다. 뜨는 맥락메뉴에 타겟 블루프린트의 함수, 이벤트, 변수가 포함되어 있는 것을 확인할 수 있으니, 바로 사용하면 됩니다.

	![Function Parameter Pin](BP_Function_ParamPin.png)

## 문제해결 / 참고 링크

흔히 발생하는 에러 한 가지는, 모든 변수에 아무 인스턴스도 지정되어 있지 않을 때입니다. 작업중인 블루프린트에서 스크립트를 호출하려는데 타겟 블루프린트에서 스크립트를 구해오는 데 문제가 있다면, 작업중인 블루프린트의 **디테일** 패널에서 사용하고자 하는 블루프린트 인스턴스를 무엇으로 지정했는지 확인하시기 바랍니다. 대신 함수 호출 결과에서 변수를 설정했다면, 변수에 "Access None" 예외가 생겼다는 경고가 로그에 찍힐 것입니다. 메시지 로그 창을 띄워 보면, 문제를 유발시킨 노드를 열어볼 수 있는 링크가 있을 것입니다.











