INTSourceChangelist:2609228
Availability:Public
Title:仮想現実 （VR） のベスト プラクティス
Crumbs:%ROOT%, Platforms, Platforms/VR
Description:VR 向け開発に関する情報
Navigation:platform

[VAR:Params]
[PARAM:image]
	![%Platforms:title%](%ROOT%/placeholder_topic.png)
[/PARAM]
[PARAM:icon]
	![](%ROOT%/platform_icon.png)(convert:false)
[/PARAM]
[PARAM:title]
	%Platforms:title%
[/PARAM]
[PARAM:description]
	%Platforms:description%
[/PARAM]
[PARAM:path]
	[RELATIVE:Platforms]
[/PARAM]
[/VAR]

[VAR:Topic]
[OBJECT:Topic]
%params%
[/OBJECT]
[/VAR]

[VAR:TopicCompact]
[OBJECT:TopicCompact]
%params%
[/OBJECT]
[/VAR]

[VAR:Role]
[OBJECT:Role]
%params%
[PARAMLITERAL:id]
プラットフォーム
[/PARAMLITERAL]
[/OBJECT]
[/VAR]

[TOC(start:2)]

ユーザーが最高の VR 体験ができるように、仮想現実 (VR) 向けのコンテンツ開発では 
一部のワークフローを調整する必要があります。このガイドでは、VR プロジェクトのコンテンツ開発で配慮すべき主要な点について 
説明します。 


## ワールドのスケーリング

ワールドを正しくスケーリングすることは、VR プラットフォームで可能な限り最高のユーザー体験を実現するために 
非常に重要です。スケーリングが間違っていると、ユーザー側であらゆる感覚の問題が生じ、 
シミュレーション酔いが生じることもあります。オブジェクトは、プレイヤーのカメラから **0.75 から 3.5 メートル (m)** の範囲内で最も見やすくなります。 
UE4 内では、**1 アンリアル ユニット (UU) は 1 センチ (cm) と等しくなっています**。つまり、アンリアル エンジン内のオブジェクトは、以下の場合に最適な状態で見ることができます。 
すなわち、VR を使用する場合にプレイヤーのカメラから **75 UU から 350 UU** 離れている場合に最適になります。 
 
| 距離  | アンリアル ユニット(UU) での距離 |
| --- | --- |
| 1 センチ (cm) | 1 アンリアル ユニット|
| 1 m |100 アンリアル ユニット|
| 1 キロ (km) | 100,000 アンリアル ユニット|

UE4 内の **World Settings (ワールド設定)** にある **World to Meters** 変数でワールドの 
スケールを調整することができます。ただし、ワールドのスケールを調整する際には注意してください。 
繰り返しになりますが、スケール選択を誤ると、ワールドとユーザーとの間で断絶が生じ、シミュレーション酔いを招く場合があります。

![](T_VR_World_To_Meters_00.png)

## シミュレーション酔い

シミュレーション酔いは、VR ワールドで HMD デバイスを使用する際に生じる移動酔いの一形態です。シミュレーション酔いは、 
ユーザーの VR 体験に著しい影響を与え、場合によっては、VR 体験を完全に台無しにします。つらい VR 体験をする可能性を減らすために、 
以下に記載するベストプラクティスに **厳密に** に従うようにしてください。従わない場合は、 
ユーザーが非常に不快な VR 体験をすることになるかもしれません。    

* 開発者は VR デバイスの使用に慣れすぎているため、テスト対象者としては **最悪** です。シミュレーション酔いが発生しないように、ゲームを可能な限り多くの様々な人々でチェックしてください。
* 不快な VR 体験の最大の要因になりがちなため、シネマティックなカメラやプレイヤーからカメラの動きの制御を奪うようなカメラの **_使用は避けてください_**。
* 視野角 (FOV) を手動で **_オーバーライド_** しないでください。また、エンド ユーザーが視野角を編集できるように **しないでください。**この値は、ヘッドセットとレンズの物理ジオメトリと一致させる必要があり、デバイスの SDK と内部コンフィギュレーションを通して自動的に設定されるようにします。不整合があれば、頭を回転させたときにワールドが歪んでいるように見えて、不快感や吐き気につながります。 
* ほとんどのファースト パーソン ゲームのようにカメラ エフェクトで歩いているときの上下運動 ("Walking Bob") を **_使用しないようにしてください_**。人体の動きを模倣するためにカメラを上下に動かすと、プレイヤーはシミュレーション酔いを起こし、VR 体験を台無しにします。 
* イベントをプレイヤーに伝えようとするときに _**カメラを揺らさないでください。**_プレイヤーの隣で手榴弾が爆発した場合に、VR ではないゲームでカメラが揺れるのは意味があります。しかし、VR ゲームでは非常に速くシミュレーション酔いを引き起こすことがあります。
* VR ゲーム用にワールドとレベルを設計している場合、通常よりも暗いライトとカラーを使用するようにしてください。VR ゲームで強く鮮やかなライティングを使用すると、シミュレーション酔いがより速く起こることがあります。通常よりも落ち着いた描画や暗いライトを使用することで、こうした状況を回避します。
* フレームレートを可能な限り高く維持します。フレームレートが低いとシミュレーション酔いを引き起こす新たな要因となるため、ゲームをできる限り最適化するようにしてください。デバイスのリフレッシュレートに対してフレームレート(DK1 で 60 fps、DK2 で 75 fps) を維持しなければなりません。
* 階段は避けて代わりにリフトを使用します。プレイヤーが非常に速く移動する場合、特に階段などのように上下に移動する場合、方向感覚を失わせる可能性があります。
* プレイヤーは、全て全速で開始するようにしてください。次第に全速へと加速するようにはしないでください。移動速度は常に一定速度になるようにします。 
* 被写界深度やモーションブラーのポストプロセスは **使用しないでください**。これらはユーザーが何を見るかに大きな影響を及ぼし、さらに重要なこととしてシミュレーション酔いを非常に速く生じうるからです。 


上記のリストは、シミュレーション酔いを引き起こす主要な問題ですが、これ以外にも数多くあります。 

## VR キャラクター設定

VR ヘッドセットを使用したキャラクターのセットアップは標準のキャラクターのセットアップとは若干異なります。例えば、キャラクターの 
高さ、幅、速度、およびカメラの位置はすべて VR キャラクターに対応するように少々修正する必要があります。   

[REGION:tip]
 VR ワールドのオブジェクトを構築する場合、デジタル オブジェクトのスケールを 
 現実世界のオブジェクトと同じにすることが重要です。現実世界よりも大きくしたり、小さくしたりすると、 
 達成しようとする没入感を損なうことがあります。 
[/REGION]
 
 **キャラクターの高さと幅**

キャラクターの高さと幅は、可能な限り現実世界の寸法と同じにします。大きすぎたり、小さすぎるサイズを使用すると、 
達成しようとする没入感を損なうことがあります。  

|プロパティ| UE4 デフォルト | 推奨 VR |
|---| --- | --- |
|高さ:| 192 CM|176 CM|
|幅:| 84 CM|68 CM|

**移動速度**

VR の移動速度は設定を推奨することが難しいプロパティです。移動速度の選択は、 
達成しようとする体験のタイプによって決まるからです。例えば、Elemental VR デモでは、移動速度は 
通常の約 1/4 の速度になっています。  

|プロパティ| UE4 デフォルト | 推奨 VR |
|---| --- | --- |
移動速度:|60 M/S|24 M/S|

**カメラの位置**

キャラクターの目の高さであることを補正するために VR カメラは基本的な目の高さよりも若干低く配置する必要があります。  

|プロパティ| UE4 デフォルト | 推奨 VR |
|---| --- | --- |
基本的な目の高さ:|180 CM|160 CM|

## VR コンテンツに対する配慮

VR コンテンツを制作する場合には、ユーザーが複数アングルからコンテンツを見ることができるという点を覚えておいてください。以下では、これまでは行っていたが 
VR では回避する必要があることをいくつか説明します。

* **Scale** - VR ワールドのオブジェクトのスケーリングで行うべき最適なことは、可能な限り現実を模倣することです。現実世界よりもオブジェクトを大きくしたり、小さくしたりすると、混乱を招き、シミュレーション酔いにつながることがあります。
* **Missing Polygon Faces** - 標準のゲームでは、プレイヤー側から見えないポリゴン面をオブジェクトから取り除くことは認められることであり、好ましいことです。しかし、VR ゲームではプレイヤーは周囲を見渡す自由度が高くなっており、こうした古いやりかたでは、プレイヤーが見るはずではないものを見ることができることがあるため、行うべきではありません。 

## ブループリント関数
 
 いくつかのブループリント関数は、VR ヘッドセットとのインタラクションをよりよいもにするのに役立ちます。こうした関数は、 
 ブループリント エディタ内にある **Head Mounted Display** メニューにあります。 

 ![](T_BlueprintHMD.jpg)

|ブループリントノード名| 機能 | 
|---| --- |
Enable Low Persistence Mode (低パーシスタンス モードを有効にする) |Low persistence モードとFull persistence モードを切り替えます。|
Get Orientation And Position (方向と位置を取得) | HMD の現在の方向と位置を取得します。|
Get Positional Tracking Camera Parameters (位置をトラッキングするカメラ パラメータを取得) | HMD にポジション トラッキング カメラがある場合、カメラのゲームワールドの位置とトラッキングの境界領域のパラメータも戻します。これは、正当なポジション トラッキング範囲を、ゲーム内で表現できるようにします。カメラが利用できない、または HMD がサポートしない場合は、すべての値はゼロになります。|
Has Valid Tracking Position (有効なトラック位置を持つ) | HMD がポジション トラッキングをサポートする場合、現在トラッキングされているかどうかを示します。|
Is In Low Persistence Mode (低パーシスタンス モード) | HMD が、Low persistence モードの場合、_true_ を戻します。そうでない場合は、 _false_ を戻します。|
Reset Orientation And Position (方向と位置をリセット) | 現在のヨーは前方向であり、現在位置は「ゼロポイント」 (ポジション トラッキングにたいして) とみなし、ロールとピッチをゼロに設定して方向をリセットします。 |

## 既知の問題 

HMD デバイス用に画像をレンダリングして表示するために必要なリソース量は非常に大きいものです。 
そのため、アンリアル エンジンの一部の機能は現時点で HMD デバイスを使用すると機能しません。以下のリストは、HMD デバイスの現時点で既知の問題と、 
可能であれば回避策を示したものです。  

|既知の問題| 回避策 | 
|---| --- |
| テクスチャのブラー / 振動| これは UE4 がアンチエイリアシングのために使用する TemporalAA によって生じます。現時点の回避策は、Post Process ボリューム設定で、AA method を FXAA または None に切り替えて、TemporalAA を無効にすることです。 
| Screen Space Reflections(SSR)| 現時点ではサポートされておらず機能しません。しかし [反射プローブ](Resources/Showcases/Reflections#反射背景) は機能します。 



**法線マッピングの問題**

VR でオブジェクト上の法線マップを見ると、これまでのような効果がなくなっていることがわかります。これは 
法線マップが両眼表示や運動視差を考慮していないためです。そのため、法線マップは 
VR デバイスを通してみるとフラットに見えます。これを回避するために、以下のいずれかを行うことができます。 

|形状タイプ|説明|
|---|---|
|[視差マッピング](http://en.wikipedia.org/wiki/Parallax_mapping)| 視差マッピングは、法線マッピングでは考慮しないデプスキューを考慮することで法線マッピングを次のレベルに高めます。視差マッピング シェーダーは、オブジェクトが実際よりも詳細に表示されるようにすることで、深さ情報をよりよく表示できます。どのアングルで見ても視差マップ自体が補正し、その視点からの正確な深さ情報を表示するようにします。視差マップは、敷石道や表面の細部などの使用に最適です。 
|[テッセレーション シェーダのディスプレースメント](Resources/ContentExamples/MaterialNodes/1_11) | テッセレーション シェーダのディスプレースメントは、オブジェクトにモデル化されない詳細を付け加えることで 3D ジオメトリをリアルタイムでディスプレースします。テッセレーション シェーダーは情報を表示するうえで素晴らしい作業を行います。実際には、より多くの頂点を作り、それを 3D 空間にディスプレースすることで欠落している詳細を作ります。 |
