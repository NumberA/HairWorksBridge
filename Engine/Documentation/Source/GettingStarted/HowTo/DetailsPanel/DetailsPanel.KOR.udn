INTSourceChangelist:2652661
Availability:Public
Title:액터 프로퍼티 편집
Crumbs: %ROOT%, Gameplay, GettingStarted\HowTo
Description:디테일 패널을 통한 머티리얼, 피직스, 스케일 적용과 같은 액터 프로퍼티 편집하기 입니다.
Related: Engine/UI/LevelEditor/Details
Related: Engine/UI/LevelEditor/Details/Interface
Related: Engine/UI/PropertyMatrix

레벨에 액터를 배치하고나면, 레벨에서의 모양이나 기능을 변경하고 싶을 것입니다. 레벨에 액터를 선택한 후 **디테일** 패널을 보면 액터에 대한 정보가 저장되어 변경 가능합니다. 이 페이지에서는 **디테일** 패널에 접근하고 액터의 프로퍼티를 변경하는 데 대한 샘플 용례를 보여드리겠습니다. 자세한 정보는 [디테일 패널](Engine/UI/LevelEditor/Details) 문서를 참고하시기 바랍니다.

[TOC(start:2 end:2)]

[REGION:note]
이 비법 안내에서는 **시작용 콘텐츠** 포함 **블루프린트 삼인칭** 템플릿으로 새 프로젝트를 만들었습니다. 템플릿을 기반으로 프로젝트를 만들어 본 적이 없거나 시작용 콘텐츠를 포함하는 방법을 모르겠는 경우, [](Engine/Basics/Projects/Browser) 문서에서 프로젝트 생성/열기, 템플릿, 프로젝트 세팅 관련 정보를 참고하시기 바랍니다. 
[/REGION]


## 프로퍼티 편집하기

이 안내서에서는 액터의 스케일을 조절하여 크기를 키우거나, **머티리얼** 을 적용하거나, 액터에 **피직스** 를 켜거나, 액터의 **콜리전 세팅** 을 조정하여 게임플레이 도중 다른 액터와 부딛히도록 등록하는 등, 레벨의 액터에 영향을 끼치는 여러가지 프로퍼티를 바꿔보도록 하겠습니다.

### 프로퍼티 스케일 조절

먼저 액터를 선택한 다음 레벨에 배치하고 스케일을 약간 키워보겠습니다.

1.	프로젝트를 연 후, **콘텐츠 브라우저** 안에서 **Starter Content** - **Shapes** 폴더를 엽니다.

1.	**Shape_Sphere** 를 찾은 다음 레벨 내 계단 바로 위에 끌어 놓습니다.

	![](Details1.png)

1.	액터가 배치되면 **디테일** 패널이 채워집니다.

	[REGION:lightbox]
	[![](Details2.png)(w:800)](Details2.png)
	[/REGION]

	_클릭하면 이미지를 원래 크기로 봅니다._

1.	**디테일** 패널 내 _트랜스폼_ 아래 **스케일** 에서 자물쇠 아이콘을 클릭한 다음 **XYZ** 값을 **3.0** 으로 설정합니다.

	![](Details3.png)

	변경을 하면서 보면, 레벨에 있는 구체가 새로 입력한 값으로 업데이트되는 것이 보일 것입니다.

	![](Details4.png)

	선택한 액터의 **스케일** 을 설정했는데, **디테일** 패널에서 액터의 **위치** 와 **회전** 도 설정할 수 있습니다.

1.	**위치** 의 **XYZ** 값을 **120.0**, **380.0**, **350.0** 으로 각각 설정합니다.

	![](Details_Add.png)

### 머티리얼 프로퍼티

다음으로 액터의 기본 머티리얼 대신 새로운 머티리얼을 적용해 봅시다.

1.	**디테일** 패널에서 **머티리얼** 섹션으로 찾아 내려가 **머티리얼 선택** 드롭다운 박스를 클릭합니다.

	![](Details5.png)

1.	나타나는 메뉴에서 구체에 적용할 **머티리얼** 을 선택합니다.

	![](Details6.png)

	**머티리얼** 을 선택하면, 드롭다운 박스가 선택된 것으로 업데이트되고, 레벨에 있는 구체도 업데이트됩니다.

1.	**머티리얼 선택** 드롭다운 박스 옆의 확대경 아이콘을 클릭합니다.

	![](Details7.png)

	이 아이콘을 클릭하면 **콘텐츠 브라우저** 안에서 그 **머티리얼** 을 자동으로 찾아 선택해 줍니다.

	![](Details8.png)

	**콘텐츠 브라우저** 에서 위치를 잘 모르는 애셋을 찾을 때 좋습니다.

1.	**디테일** 패널에서, 노랑색 화살표 아이콘을 클릭합니다.

	![](Details9.png)

	이 아이콘을 클릭할 때마다, 옵션을 기본값으로 리셋시킵니다.

	![](Details10.png)

1.	**콘텐츠 브라우저** 에서 다른 **머티리얼** 을 선택합니다.

	![](Details11.png)

1.	**디테일** 패널에서 **머티리얼 선택** 드롭다운 박스 옆의 화살표 아이콘을 클릭합니다.

	![](Details12.png)

	이 아이콘을 클릭하면 **콘텐츠 브라우저** 에 선택된 애셋을 옵션 세팅에 자동으로 할당해 줍니다.

	![](Details13.png)

### 피직스 프로퍼티

여기서는 액터의 **피직스** 를 켜서 레벨이 시작되면 액터가 바닥으로 낙하하여 다른 액터와 반응하도록 하겠습니다.

1.	**디테일** 패널에서 검색창에 **physics** 라 입력합니다.

	![](Details14.png)

	**디테일** 패널의 검색창에 필터를 적용하여 입력된 것에 따른 옵션만 표시되도록 할 수 있습니다.

1.	**Simulate Physics** (물리 시뮬레이션) 박스를 체크하여 구체에 물리 시뮬레이션을 켭니다.

	![](Details15.png)

	이제 게임을 플레이하면 구체에 물리 시뮬레이션이 적용됩니다.

1.	**디테일** 패널에서 검색창 안의 **X** 표시를 클릭합니다.

	![](Details17.png)

	그러면 검색 필터가 지워집니다.

### 콜리전 프로퍼티

이번에는 액터에 **콜리전** 을 업데이트하여 게임내에서 액터가 무언가에 걸릴 때마다 **Hit Event** 를 생성하도록 하겠습니다.

1.	**Collision** 섹션으로 내려가 **Simulation Generates Hit Events** (시뮬레이션으로 히트 이벤트 생성) 박스를 체크합니다.

	![](Details18.png)

	이 옵션을 체크해 두면 구체가 무언가에 닿았는지 알아낼 수 있습니다 (게임플레이 상황에 유용합니다).

1.	**메인 툴바** 에서 **블루프린트** 버튼을 클릭한 다음 **레벨 블루프린트 열기** 를 선택합니다.

	![](Details19.png)

	이제 구체가 히트 이벤트를 등록할 수 있기에 [블루프린트 비주얼 스크립팅](Engine/Blueprints) 을 사용하여 플레이어가 구체에 닿으면 플레이어를 죽이도록 하겠습니다.

1.	그래프 창에 **우클릭** 한 다음 **Shape Sphere 에 대한 이벤트 추가** - **Collision*** - **Add On Actor Hit** 이벤트를 추가합니다.

	![](Details20.png)

	그러면 구체가 무언가에 닿으면 이벤트를 발동합니다.

1.	**OnActorHit** 노드에서 **Other Actor** 핀을 끌어놓은 다음 **Cast To ThirdPersonCharacter** 를 검색하여 선택합니다.

	![](Details21.png)

	여기서는 구체가 뭔가에 맞으면, **Other Actor** 가 (플레이어 캐릭터인) **ThirdPersonCharacter** 에 맞은 것인지 묻는 것입니다.

1.	**Cast** 노드의 **As Third Person Character** 핀을 끌어놓은 다음 **Destroy Actor** 노드를 검색 추가합니다.

	![](Details22.png)

	**ThirdPersonCharacter** 가 맞은 **Other Actor** 라면, **ThirdPersonCharacter** 를 소멸시킵니다 (플레이어 캐릭터를 죽입니다).

1.	창 좌상단 구석의 **컴파일** 버튼을 클릭하여 블루프린트를 마무리하고 창을 닫습니다.

	![](Details23.png)

1.	**메인 툴바** 에서 **플레이** 버튼을 눌러 에디터에서 플레이합니다.

	![](Details24.png)

이제 에디터에서 플레이하면, **WASD** 키로 캐릭터를 움직이고 **마우스** 로 카메라를 조작할 수 있습니다. 곧 구체가 계단에서 굴러내려 오는데, 그리로 걸어들어 가면 캐릭터가 죽어 사라지게 됩니다 (죽은 이후에는 **Esc** 키를 눌러 플레이 세션을 종료합니다).

#### 이렇게 해 보세요

*	**디테일** 패널로 돌아가 구체를 점프해 넘을 수 있을 만큼 스케일을 조절합니다.
*	또, 구체의 그림자를 끌 수 있는 방법을 검색하여 찾아봅니다.


## 디테일 패널 옵션

**디테일** 패널 상단에는 액터 작업시 사용할 수 있는 부가 옵션이 있습니다.

![](DetailsBreakdown1.png)

위 그림에서:

1.	**이름 칸** - 여기에 액터의 이름을 입력할 수 있습니다 (아래 확인).
1.	**검색창** - **디테일** 패널에 특정 프로퍼티만 표시하도록 검색 및 필터링 적용에 사용됩니다 (위의 [프로퍼티 편집하기](#프로퍼티편집하기) 참고).
1.	**프로퍼티 매트릭스** - 여러 액터의 프로퍼티 다수를 동시에 확인하며 편집하는 툴입니다 ([프로퍼티 매트릭스](#프로퍼티매트릭스) 참고). 
1.	**디테일 뷰어** - 옵션 표시/숨김 을 통해 **디테일** 패널 표현 방식을 변경합니다 (아래 참고). 
1.	**디테일 고정** - 선택된 액터에 대해 **디테일** 패널을 고정시킵니다 (다른 액터를 선택해도 프로퍼티가 바뀌지 않습니다).

### 이름 칸

**이름 칸** 에는 선택된 액터를 표현할 이름을 입력 수 있습니다.

![](DetailsBreakdown2.png)

위에서 구체의 이름에 **RollingBall** 이라고 입력했습니다. 이제 레벨에 그 액터가 어디있는지 찾고싶으면, 이름으로 찾을 수 있습니다. [월드 아웃라이너](Engine/UI/LevelEditor/SceneOutliner/Interface) 에 이름을 입력하면, 목록에 필터가 적용되어 레벨에 그 액터를 빠르고 쉽게 찾을 수 있습니다.

### 디테일 뷰어

**디테일 뷰어** 는 클릭하면 **디테일** 패널 프로퍼티가 표현되는 방식을 변경하는 부가 옵션이 펼쳐집니다.

![](DetailsBreakdown4.png)

**Show Only Modified Properties** (변경된 프로퍼티만 표시) 옵션을 체크하면, **디테일 패널** 안에 다른 모든 프로퍼티는 걸러내고 변경된 프로퍼티만 표시해 줍니다. **Collapse All Categories** (모든 카테고리 접기)를 통해 패널의 모든 카테고리를 접거나, **Expand All Categories** (모든 카테고리 펼침)을 통해 모든 카테고리를 펼칠 수 있습니다.

**모든 고급 디테일 표시** 옵션을 통해 기본적으로 숨겨져 있는 모든 **고급 옵션** 숨김을 해제할 수 있습니다. 고급 옵션은 **디테일** 패널에 아래 화살표 아이콘으로 표시됩니다.

![](DetailsBreakdown5.png)


## 프로퍼티 매트릭스

[INCLUDE:Engine/UI/PropertyMatrix#intro]

여기서는 레벨에 여러 액터가 있을 때 **프로퍼티 매티륵스** 를 사용하는 법을 보여드리겠습니다.

1.	**콘텐츠 브라우저** 안에서 **Starter Content** - **Shapes** 를 선택한 다음, **Shape_Cube** 를 레벨에 끌어 놓습니다.

	![](PropertyMatrix1.png)

1.	레벨 에디터 뷰포트 안에서 **Ctrl+W** 를 눌러 큐브를 복제한 다음 **트랜스폼** 위젯을 사용하여 이동합니다.

	![](PropertyMatrix2.png)

1.	큐브를 4 번 더 복제하여 총 6 개의 큐브가 되도록 합니다 (위치는 아무데나 놓습니다).

	![](PropertyMatrix_3.png)

1.	큐브 중 하나를 클릭한 다음 **Ctrl** 키를 누른 채 다른 큐브를 선택하여 두 개가 선택되도록 합니다.

1.	**디테일** 패널에서 **Simulate Physics** (물리 시뮬레이션) 옵션을 선택하여 두 큐브 모두 물리 시뮬레이션이 적용되도록 합니다.

	![](PropertyMatrix_4.png)

	또한 **디테일** 패널 상단에 현재 다수의 오브젝트가 선택되어 영향받고 있음이 나타나 있습니다.

1.	레벨의 큐브 각각을 선택한 다음, **디테일** 패널에서 **프로퍼티 매트릭스** 아이콘을 클릭합니다.

	![](PropertyMatrix_5.png)

1.	**프로퍼티 매트릭스** 창이 열립니다.

	![](PropertyMatrix_6.png)

1.	오른쪽 검색창에서 **physics** 라 검색합니다.

	![](PropertyMatrix_7.png)

1.	창의 검색줄 아래 **Simulate Physics** 옆 압정 아이콘을 클릭합니다.

	![](PropertyMatrix_8.png)

1.	왼쪽 창에 선택된 액터 각각에 대한 **Simulate Physics** 프로퍼티가 표시되도록 채워집니다.

	![](PropertyMatrix_9.png)

	위에서 보듯이, 큐브 둘은 **Simulate Physics** 가 true 로 설정되어 있는 반면, 나머지에는 그렇지 않습니다. 무언가 예상대로 작동하지 않거나 값이 옳은 것 같지 않을 때 유용할 수 있습니다. 프로퍼티 매트릭스를 사용하면 어느 액터가 잘못 설정되어 있는지 한 눈에 쉽게 확인할 수 있으며, 액터 각각에 대한 **디테일** 패널이 아닌 프로퍼티 매트릭스 자체에서 한꺼번에 바꿀 수 있습니다.
	
	[REGION:note]
	자세한 정보는 [](Engine/UI/PropertyMatrix) 문서를 참고하세요.
	[/REGION]






